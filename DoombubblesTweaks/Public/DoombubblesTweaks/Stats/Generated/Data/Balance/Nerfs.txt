{{ $TavernBrawlerModifier := $.Balance.NerfTavernBrawler | ternary "ProficiencyBonus" "StrengthModifier" }}

new entry "TavernBrawler"
type "PassiveData"
using "TavernBrawler"
data "Boosts" " IF(IsMeleeUnarmedAttack()):RollBonus(Attack, max(0,{{$TavernBrawlerModifier}}));IF(IsMeleeUnarmedAttack()):CharacterUnarmedDamage(max(0,{{$TavernBrawlerModifier}}));IF(IsRangedUnarmedAttack()):RollBonus(Attack, max(0,{{$TavernBrawlerModifier}}));IF(IsRangedUnarmedAttack() and not HasStatus('SG_Polymorph_BeastShape',context.Source)):DamageBonus(max(0,{{$TavernBrawlerModifier}}));IF(IsUnarmedWildshape() and IsUnarmedAttack(){{if not $.Balance.WildshapeDoubleDip}} and (IsDamageTypeBludgeoning() or IsDamageTypePiercing() or IsDamageTypeSlashing()){{end}}):DamageBonus(max(0,{{$TavernBrawlerModifier}}))"
data "StatsFunctorContext" ""
data "Conditions" ""
data "StatsFunctors" ""
data "StatsFunctorContext" "OnAttack"
data "Conditions" "(IsRangedUnarmedAttack() or SpellId('Throw_ImprovisedWeapon') or SpellId('Throw_ImprovisedWeaponBerserker')) and HasDamageEffectFlag(DamageFlags.Hit)"
data "StatsFunctors" "DealDamage({{$TavernBrawlerModifier}});"
{{- if $.Balance.NerfTavernBrawler }}
data "Description" "h1fecb306g6183g4f42gbd47gcaf6810fe343"
{{- end }}


{{- if $.Balance.NerfArcaneAcuity }}
new entry "MAG_GISH_ARCANE_ACUITY_DURATION_TECHNICAL"
type "StatusData"
using "MAG_GISH_ARCANE_ACUITY_DURATION_TECHNICAL"
data "OnApplyFunctors" "IF(MaximumLowStackableStatus(context.Target, 'MAG_GISH_ARCANE_ACUITY')):SetStatusDuration(MAG_GISH_ARCANE_ACUITY, 5, ForceSet) "
{{- end }}


{{- if $.Balance.NerfSlashingFlourish }}

new entry "Zone_BladeFlourish_Slashing"
type "SpellData"
data "SpellType" "Zone"
using "Zone_BladeFlourish_Slashing"
data "SpellSuccess" "DealDamage(MainMeleeWeapon/2 + LevelMapValue(BardicInspiration), MainWeaponDamageType);GROUND:ExecuteWeaponFunctors(MainHand)"
data "TooltipDamageList" "DealDamage(MainMeleeWeapon/2 + LevelMapValue(BardicInspiration), MainWeaponDamageType)"

new entry "Projectile_BladeFlourish_Slashing"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_BladeFlourish_Slashing"
data "SpellSuccess" "DealDamage(max(1,MainRangedWeapon/2 + LevelMapValue(BardicInspiration)), MainRangedWeaponDamageType); ExecuteWeaponFunctors(MainHand)"
data "TooltipDamageList" "DealDamage(MainMeleeWeapon/2 + LevelMapValue(BardicInspiration), MainMeleeWeaponDamageType)"

{{- end }}

{{- if $.Balance.FixSlashingFlourish }}

new entry "Projectile_BladeFlourish_Slashing"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_BladeFlourish_Slashing"
data "SpellFlags" "HasHighGroundRangeExtension;RangeIgnoreVerticalThreshold;IsHarmful;IgnorePreviouslyPickedEntities"

{{- end }}