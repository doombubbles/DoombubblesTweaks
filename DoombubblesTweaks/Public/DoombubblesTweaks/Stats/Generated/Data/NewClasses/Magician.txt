new entry "DraconicResilienceMagician"
type "PassiveData"
using "DraconicResilience"
data "Description" "h052ea192gb42cg4e91g84b0g9268cf9ea9ab"
data "Boosts" "ACOverrideFormula(10,true,Dexterity,{{$.Balance.MagicianCastingAbility}})"

new entry "DraconicAncestry_Black_Magician"
type "PassiveData"
using "DraconicAncestry_Black"
data "Boosts" "UnlockSpell(Target_Grease,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Blue_Magician"
type "PassiveData"
using "DraconicAncestry_Blue"
data "Boosts" "UnlockSpell(Projectile_WitchBolt,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Brass_Magician"
type "PassiveData"
using "DraconicAncestry_Brass"
data "Boosts" "UnlockSpell(Target_Sleep,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Bronze_Magician"
type "PassiveData"
using "DraconicAncestry_Bronze"
data "Boosts" "UnlockSpell(Target_FogCloud,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Copper_Magician"
type "PassiveData"
using "DraconicAncestry_Copper"
data "Boosts" "UnlockSpell(Target_HideousLaughter,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Gold_Magician"
type "PassiveData"
using "DraconicAncestry_Gold"
data "Boosts" "UnlockSpell(Shout_DisguiseSelf,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Green_Magician"
type "PassiveData"
using "DraconicAncestry_Green"
data "Boosts" "UnlockSpell(Projectile_RayOfSickness,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Red_Magician"
type "PassiveData"
using "DraconicAncestry_Red"
data "Boosts" "UnlockSpell(Zone_BurningHands,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Silver_Magician"
type "PassiveData"
using "DraconicAncestry_Silver"
data "Boosts" "UnlockSpell(Shout_FeatherFall,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_White_Magician"
type "PassiveData"
using "DraconicAncestry_White"
data "Boosts" "UnlockSpell(Shout_ArmorOfAgathys,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Ruby_Magician"
type "PassiveData"
using "DraconicAncestry_Ruby"
data "Boosts" "UnlockSpell(Projectile_MagicMissile,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Diamond_Magician"
type "PassiveData"
using "DraconicAncestry_Diamond"
data "Boosts" "UnlockSpell(Projectile_GuidingBolt,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Amethyst_Magician"
type "PassiveData"
using "DraconicAncestry_Amethyst"
data "Boosts" "UnlockSpell(Target_DissonantWhispers,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Emerald_Magician"
type "PassiveData"
using "DraconicAncestry_Emerald"
data "Boosts" "UnlockSpell(Target_InflictWounds,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Sapphire_Magician"
type "PassiveData"
using "DraconicAncestry_Sapphire"
data "Boosts" "UnlockSpell(Zone_Thunderwave,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"

new entry "DraconicAncestry_Topaz_Magician"
type "PassiveData"
using "DraconicAncestry_Topaz"
data "Boosts" "UnlockSpell(Target_Command_Container,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,{{ $.Balance.MagicianCastingAbility }})"



new entry "ElementalAffinity_Resistance_Magician"
type "PassiveData"
using "ElementalAffinity_Resistance_Check"
data "Description" "h3de9cbfbg99a9g413cgbc2bg91b52ff3b536"
data "Boosts" ""
data "StatsFunctorContext" "OnCreate"
data "StatsFunctors" "IF(HasPassive('DraconicAncestry_Black_Magician',context.Source) or HasPassive('DraconicAncestry_Copper_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_ACID,100,-1);IF(HasPassive('DraconicAncestry_Silver_Magician',context.Source) or HasPassive('DraconicAncestry_White_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_COLD,100,-1);IF(HasPassive('DraconicAncestry_Red_Magician',context.Source) or HasPassive('DraconicAncestry_Gold_Magician',context.Source) or HasPassive('DraconicAncestry_Brass_Magician',context.Source) or HasPassive('DraconicAncestry_Topaz_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_FIRE,100,-1);IF(HasPassive('DraconicAncestry_Blue_Magician',context.Source) or HasPassive('DraconicAncestry_Bronze_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_LIGHTNING,100,-1);IF(HasPassive('DraconicAncestry_Green_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_POISON,100,-1);IF(HasPassive('DraconicAncestry_Ruby_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_FORCE,100,-1);IF(HasPassive('DraconicAncestry_Diamond_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_RADIANT,100,-1);IF(HasPassive('DraconicAncestry_Amethyst_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_PSYCHIC,100,-1);IF(HasPassive('DraconicAncestry_Emerald_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_NECROTIC,100,-1);IF(HasPassive('DraconicAncestry_Sapphire_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_THUNDER,100,-1);"


new entry "ElementalAffinity_Damage_Magician"
type "PassiveData"
using "ElementalAffinity_Damage"
data "Description" "h1df19a5dg2381g4dacg8e0fgfbfad25db990"
data "StatsFunctors" "IF(HasPassive('DraconicAncestry_Black_Magician',context.Source) or HasPassive('DraconicAncestry_Copper_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_ACID_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Silver_Magician',context.Source) or HasPassive('DraconicAncestry_White_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_COLD_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Red_Magician',context.Source) or HasPassive('DraconicAncestry_Gold_Magician',context.Source) or HasPassive('DraconicAncestry_Brass_Magician',context.Source) or HasPassive('DraconicAncestry_Topaz_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_FIRE_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Blue_Magician',context.Source) or HasPassive('DraconicAncestry_Bronze_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_LIGHTNING_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Green_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_POISON_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Ruby_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_FORCE_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Diamond_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_RADIANT_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Amethyst_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_PSYCHIC_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Emerald_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_NECROTIC_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);IF(HasPassive('DraconicAncestry_Sapphire_Magician',context.Source)):ApplyStatus(ELEMENTALAFFINITY_THUNDER_EXTRA_DAMAGE_TECHNICAL_MAGICIAN,100,-1);"

new entry "ELEMENTALAFFINITY_ACID_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_ACID_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_ACID_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self() and IsDamageTypeAcid()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Acid)"

new entry "ELEMENTALAFFINITY_COLD_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_COLD_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_COLD_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self() and IsDamageTypeCold()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Cold)"

new entry "ELEMENTALAFFINITY_FIRE_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_FIRE_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_FIRE_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF((not Self() and IsDamageTypeFire())):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Fire)"

new entry "ELEMENTALAFFINITY_LIGHTNING_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_LIGHTNING_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_LIGHTNING_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self() and IsDamageTypeLightning()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Lightning)"

new entry "ELEMENTALAFFINITY_POISON_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_POISON_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_POISON_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self() and IsDamageTypePoison()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Poison)"

new entry "ELEMENTALAFFINITY_FORCE_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_FORCE_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_FORCE_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self() and IsDamageTypeForce()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Force)"

new entry "ELEMENTALAFFINITY_RADIANT_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_RADIANT_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_RADIANT_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self()and IsDamageTypeRadiant()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Radiant)"

new entry "ELEMENTALAFFINITY_THUNDER_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_THUNDER_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_THUNDER_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self() and IsDamageTypeThunder()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Thunder)"

new entry "ELEMENTALAFFINITY_PSYCHIC_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_PSYCHIC_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_PSYCHIC_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self() and IsDamageTypePsychic()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Psychic)"

new entry "ELEMENTALAFFINITY_NECROTIC_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
type "StatusData"
data "StatusType" "BOOST"
using "ELEMENTALAFFINITY_NECROTIC_EXTRA_DAMAGE_TECHNICAL"
data "StackId" "ELEMENTALAFFINITY_NECROTIC_EXTRA_DAMAGE_TECHNICAL_MAGICIAN"
data "Boosts" "IF(not Self() and IsDamageTypeNecrotic()):DamageBonus(max(0, {{$.Balance.MagicianCastingAbility}}Modifier), Necrotic)"
